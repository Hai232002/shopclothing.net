#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClothesWebNET.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CLOTHES")]
	public partial class CLOTHESEenities1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertasp_2120110218(asp_2120110218 instance);
    partial void Updateasp_2120110218(asp_2120110218 instance);
    partial void Deleteasp_2120110218(asp_2120110218 instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    partial void InsertDetailBIll(DetailBIll instance);
    partial void UpdateDetailBIll(DetailBIll instance);
    partial void DeleteDetailBIll(DetailBIll instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertType(Type instance);
    partial void UpdateType(Type instance);
    partial void DeleteType(Type instance);
    partial void InsertUser1(User1 instance);
    partial void UpdateUser1(User1 instance);
    partial void DeleteUser1(User1 instance);
    partial void InsertVoucher1(Voucher1 instance);
    partial void UpdateVoucher1(Voucher1 instance);
    partial void DeleteVoucher1(Voucher1 instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    #endregion
		
		public CLOTHESEenities1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CLOTHESEenities1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CLOTHESEenities1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CLOTHESEenities1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<asp_2120110218> asp_2120110218s
		{
			get
			{
				return this.GetTable<asp_2120110218>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
		
		public System.Data.Linq.Table<DetailBIll> DetailBIlls
		{
			get
			{
				return this.GetTable<DetailBIll>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
		
		public System.Data.Linq.Table<User1> User1s
		{
			get
			{
				return this.GetTable<User1>();
			}
		}
		
		public System.Data.Linq.Table<Voucher1> Voucher1s
		{
			get
			{
				return this.GetTable<Voucher1>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.asp_2120110218")]
	public partial class asp_2120110218 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASV;
		
		private string _TENSV;
		
		private string _SODT;
		
		private string _LOP;
		
		private string _DIACHI;
		
		private string _EMAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    partial void OnTENSVChanging(string value);
    partial void OnTENSVChanged();
    partial void OnSODTChanging(string value);
    partial void OnSODTChanged();
    partial void OnLOPChanging(string value);
    partial void OnLOPChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public asp_2120110218()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENSV
		{
			get
			{
				return this._TENSV;
			}
			set
			{
				if ((this._TENSV != value))
				{
					this.OnTENSVChanging(value);
					this.SendPropertyChanging();
					this._TENSV = value;
					this.SendPropertyChanged("TENSV");
					this.OnTENSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODT", DbType="VarChar(10)")]
		public string SODT
		{
			get
			{
				return this._SODT;
			}
			set
			{
				if ((this._SODT != value))
				{
					this.OnSODTChanging(value);
					this.SendPropertyChanging();
					this._SODT = value;
					this.SendPropertyChanged("SODT");
					this.OnSODTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOP", DbType="NChar(10)")]
		public string LOP
		{
			get
			{
				return this._LOP;
			}
			set
			{
				if ((this._LOP != value))
				{
					this.OnLOPChanging(value);
					this.SendPropertyChanging();
					this._LOP = value;
					this.SendPropertyChanged("LOP");
					this.OnLOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idUser;
		
		private string _idPermission;
		
		private string _fullName;
		
		private string _username;
		
		private string _password;
		
		private bool _gender;
		
		private int _identityCard;
		
		private string _address;
		
		private string _email;
		
		private string _URLAvatar;
		
		private int _phone;
		
		private EntitySet<Bill> _Bills;
		
		private EntityRef<Permission> _Permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnidPermissionChanging(string value);
    partial void OnidPermissionChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OngenderChanging(bool value);
    partial void OngenderChanged();
    partial void OnidentityCardChanging(int value);
    partial void OnidentityCardChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnURLAvatarChanging(string value);
    partial void OnURLAvatarChanged();
    partial void OnphoneChanging(int value);
    partial void OnphoneChanged();
    #endregion
		
		public User()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Permission = default(EntityRef<Permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermission", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string idPermission
		{
			get
			{
				return this._idPermission;
			}
			set
			{
				if ((this._idPermission != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPermissionChanging(value);
					this.SendPropertyChanging();
					this._idPermission = value;
					this.SendPropertyChanged("idPermission");
					this.OnidPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit NOT NULL")]
		public bool gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identityCard", DbType="Int NOT NULL")]
		public int identityCard
		{
			get
			{
				return this._identityCard;
			}
			set
			{
				if ((this._identityCard != value))
				{
					this.OnidentityCardChanging(value);
					this.SendPropertyChanging();
					this._identityCard = value;
					this.SendPropertyChanged("identityCard");
					this.OnidentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLAvatar", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URLAvatar
		{
			get
			{
				return this._URLAvatar;
			}
			set
			{
				if ((this._URLAvatar != value))
				{
					this.OnURLAvatarChanging(value);
					this.SendPropertyChanging();
					this._URLAvatar = value;
					this.SendPropertyChanged("URLAvatar");
					this.OnURLAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Int NOT NULL")]
		public int phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bill", Storage="_Bills", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User", Storage="_Permission", ThisKey="idPermission", OtherKey="idPermission", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._idPermission = value.idPermission;
					}
					else
					{
						this._idPermission = default(string);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idVoucher;
		
		private string _percent;
		
		private System.DateTime _dateStart;
		
		private System.DateTime _dateEnd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidVoucherChanging(string value);
    partial void OnidVoucherChanged();
    partial void OnpercentChanging(string value);
    partial void OnpercentChanged();
    partial void OndateStartChanging(System.DateTime value);
    partial void OndateStartChanged();
    partial void OndateEndChanging(System.DateTime value);
    partial void OndateEndChanged();
    #endregion
		
		public Voucher()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVoucher", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idVoucher
		{
			get
			{
				return this._idVoucher;
			}
			set
			{
				if ((this._idVoucher != value))
				{
					this.OnidVoucherChanging(value);
					this.SendPropertyChanging();
					this._idVoucher = value;
					this.SendPropertyChanged("idVoucher");
					this.OnidVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[percent]", Storage="_percent", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string percent
		{
			get
			{
				return this._percent;
			}
			set
			{
				if ((this._percent != value))
				{
					this.OnpercentChanging(value);
					this.SendPropertyChanging();
					this._percent = value;
					this.SendPropertyChanged("percent");
					this.OnpercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateStart", DbType="DateTime NOT NULL")]
		public System.DateTime dateStart
		{
			get
			{
				return this._dateStart;
			}
			set
			{
				if ((this._dateStart != value))
				{
					this.OndateStartChanging(value);
					this.SendPropertyChanging();
					this._dateStart = value;
					this.SendPropertyChanged("dateStart");
					this.OndateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime dateEnd
		{
			get
			{
				return this._dateEnd;
			}
			set
			{
				if ((this._dateEnd != value))
				{
					this.OndateEndChanging(value);
					this.SendPropertyChanging();
					this._dateEnd = value;
					this.SendPropertyChanged("dateEnd");
					this.OndateEndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailBIll")]
	public partial class DetailBIll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idDetailBill;
		
		private string _idProduct;
		
		private string _idBill;
		
		private int _qty;
		
		private int _intoMoney;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product> _Product1;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Bill> _Bill1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDetailBillChanging(string value);
    partial void OnidDetailBillChanged();
    partial void OnidProductChanging(string value);
    partial void OnidProductChanged();
    partial void OnidBillChanging(string value);
    partial void OnidBillChanged();
    partial void OnqtyChanging(int value);
    partial void OnqtyChanged();
    partial void OnintoMoneyChanging(int value);
    partial void OnintoMoneyChanged();
    #endregion
		
		public DetailBIll()
		{
			this._Product = default(EntityRef<Product>);
			this._Product1 = default(EntityRef<Product>);
			this._Bill = default(EntityRef<Bill>);
			this._Bill1 = default(EntityRef<Bill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDetailBill", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idDetailBill
		{
			get
			{
				return this._idDetailBill;
			}
			set
			{
				if ((this._idDetailBill != value))
				{
					this.OnidDetailBillChanging(value);
					this.SendPropertyChanging();
					this._idDetailBill = value;
					this.SendPropertyChanged("idDetailBill");
					this.OnidDetailBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProduct", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string idProduct
		{
			get
			{
				return this._idProduct;
			}
			set
			{
				if ((this._idProduct != value))
				{
					if ((this._Product.HasLoadedOrAssignedValue || this._Product1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProductChanging(value);
					this.SendPropertyChanging();
					this._idProduct = value;
					this.SendPropertyChanged("idProduct");
					this.OnidProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBill", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idBill
		{
			get
			{
				return this._idBill;
			}
			set
			{
				if ((this._idBill != value))
				{
					if ((this._Bill.HasLoadedOrAssignedValue || this._Bill1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBillChanging(value);
					this.SendPropertyChanging();
					this._idBill = value;
					this.SendPropertyChanged("idBill");
					this.OnidBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int NOT NULL")]
		public int qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intoMoney", DbType="Int NOT NULL")]
		public int intoMoney
		{
			get
			{
				return this._intoMoney;
			}
			set
			{
				if ((this._intoMoney != value))
				{
					this.OnintoMoneyChanging(value);
					this.SendPropertyChanging();
					this._intoMoney = value;
					this.SendPropertyChanged("intoMoney");
					this.OnintoMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailBIll", Storage="_Product", ThisKey="idProduct", OtherKey="idProduct", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DetailBIlls.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DetailBIlls.Add(this);
						this._idProduct = value.idProduct;
					}
					else
					{
						this._idProduct = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailBIll1", Storage="_Product1", ThisKey="idProduct", OtherKey="idProduct", IsForeignKey=true)]
		public Product Product1
		{
			get
			{
				return this._Product1.Entity;
			}
			set
			{
				Product previousValue = this._Product1.Entity;
				if (((previousValue != value) 
							|| (this._Product1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product1.Entity = null;
						previousValue.DetailBIlls1.Remove(this);
					}
					this._Product1.Entity = value;
					if ((value != null))
					{
						value.DetailBIlls1.Add(this);
						this._idProduct = value.idProduct;
					}
					else
					{
						this._idProduct = default(string);
					}
					this.SendPropertyChanged("Product1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_DetailBIll", Storage="_Bill", ThisKey="idBill", OtherKey="idBill", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.DetailBIlls.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.DetailBIlls.Add(this);
						this._idBill = value.idBill;
					}
					else
					{
						this._idBill = default(string);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_DetailBIll1", Storage="_Bill1", ThisKey="idBill", OtherKey="idBill", IsForeignKey=true)]
		public Bill Bill1
		{
			get
			{
				return this._Bill1.Entity;
			}
			set
			{
				Bill previousValue = this._Bill1.Entity;
				if (((previousValue != value) 
							|| (this._Bill1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill1.Entity = null;
						previousValue.DetailBIlls1.Remove(this);
					}
					this._Bill1.Entity = value;
					if ((value != null))
					{
						value.DetailBIlls1.Add(this);
						this._idBill = value.idBill;
					}
					else
					{
						this._idBill = default(string);
					}
					this.SendPropertyChanged("Bill1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permission")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idPermission;
		
		private string _namePermission;
		
		private int _level;
		
		private EntitySet<User> _Users;
		
		private EntitySet<User1> _User1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPermissionChanging(string value);
    partial void OnidPermissionChanged();
    partial void OnnamePermissionChanging(string value);
    partial void OnnamePermissionChanged();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    #endregion
		
		public Permission()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._User1s = new EntitySet<User1>(new Action<User1>(this.attach_User1s), new Action<User1>(this.detach_User1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermission", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idPermission
		{
			get
			{
				return this._idPermission;
			}
			set
			{
				if ((this._idPermission != value))
				{
					this.OnidPermissionChanging(value);
					this.SendPropertyChanging();
					this._idPermission = value;
					this.SendPropertyChanged("idPermission");
					this.OnidPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namePermission", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string namePermission
		{
			get
			{
				return this._namePermission;
			}
			set
			{
				if ((this._namePermission != value))
				{
					this.OnnamePermissionChanging(value);
					this.SendPropertyChanging();
					this._namePermission = value;
					this.SendPropertyChanged("namePermission");
					this.OnnamePermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User", Storage="_Users", ThisKey="idPermission", OtherKey="idPermission")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User1", Storage="_User1s", ThisKey="idPermission", OtherKey="idPermission")]
		public EntitySet<User1> User1s
		{
			get
			{
				return this._User1s;
			}
			set
			{
				this._User1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void attach_User1s(User1 entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_User1s(User1 entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nameProduct;
		
		private string _idProduct;
		
		private int _sizeM;
		
		private int _sizeL;
		
		private int _sizeXL;
		
		private double _price;
		
		private string _description;
		
		private string _idType;
		
		private EntitySet<DetailBIll> _DetailBIlls;
		
		private EntitySet<DetailBIll> _DetailBIlls1;
		
		private EntityRef<Type> _Type;
		
		private EntityRef<Type> _Type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameProductChanging(string value);
    partial void OnnameProductChanged();
    partial void OnidProductChanging(string value);
    partial void OnidProductChanged();
    partial void OnsizeMChanging(int value);
    partial void OnsizeMChanged();
    partial void OnsizeLChanging(int value);
    partial void OnsizeLChanged();
    partial void OnsizeXLChanging(int value);
    partial void OnsizeXLChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnidTypeChanging(string value);
    partial void OnidTypeChanged();
    #endregion
		
		public Product()
		{
			this._DetailBIlls = new EntitySet<DetailBIll>(new Action<DetailBIll>(this.attach_DetailBIlls), new Action<DetailBIll>(this.detach_DetailBIlls));
			this._DetailBIlls1 = new EntitySet<DetailBIll>(new Action<DetailBIll>(this.attach_DetailBIlls1), new Action<DetailBIll>(this.detach_DetailBIlls1));
			this._Type = default(EntityRef<Type>);
			this._Type1 = default(EntityRef<Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameProduct", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string nameProduct
		{
			get
			{
				return this._nameProduct;
			}
			set
			{
				if ((this._nameProduct != value))
				{
					this.OnnameProductChanging(value);
					this.SendPropertyChanging();
					this._nameProduct = value;
					this.SendPropertyChanged("nameProduct");
					this.OnnameProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProduct", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idProduct
		{
			get
			{
				return this._idProduct;
			}
			set
			{
				if ((this._idProduct != value))
				{
					this.OnidProductChanging(value);
					this.SendPropertyChanging();
					this._idProduct = value;
					this.SendPropertyChanged("idProduct");
					this.OnidProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizeM", DbType="Int NOT NULL")]
		public int sizeM
		{
			get
			{
				return this._sizeM;
			}
			set
			{
				if ((this._sizeM != value))
				{
					this.OnsizeMChanging(value);
					this.SendPropertyChanging();
					this._sizeM = value;
					this.SendPropertyChanged("sizeM");
					this.OnsizeMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizeL", DbType="Int NOT NULL")]
		public int sizeL
		{
			get
			{
				return this._sizeL;
			}
			set
			{
				if ((this._sizeL != value))
				{
					this.OnsizeLChanging(value);
					this.SendPropertyChanging();
					this._sizeL = value;
					this.SendPropertyChanged("sizeL");
					this.OnsizeLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizeXL", DbType="Int NOT NULL")]
		public int sizeXL
		{
			get
			{
				return this._sizeXL;
			}
			set
			{
				if ((this._sizeXL != value))
				{
					this.OnsizeXLChanging(value);
					this.SendPropertyChanging();
					this._sizeXL = value;
					this.SendPropertyChanged("sizeXL");
					this.OnsizeXLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string idType
		{
			get
			{
				return this._idType;
			}
			set
			{
				if ((this._idType != value))
				{
					if ((this._Type.HasLoadedOrAssignedValue || this._Type1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTypeChanging(value);
					this.SendPropertyChanging();
					this._idType = value;
					this.SendPropertyChanged("idType");
					this.OnidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailBIll", Storage="_DetailBIlls", ThisKey="idProduct", OtherKey="idProduct")]
		public EntitySet<DetailBIll> DetailBIlls
		{
			get
			{
				return this._DetailBIlls;
			}
			set
			{
				this._DetailBIlls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailBIll1", Storage="_DetailBIlls1", ThisKey="idProduct", OtherKey="idProduct")]
		public EntitySet<DetailBIll> DetailBIlls1
		{
			get
			{
				return this._DetailBIlls1;
			}
			set
			{
				this._DetailBIlls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Product", Storage="_Type", ThisKey="idType", OtherKey="idType", IsForeignKey=true)]
		public Type Type
		{
			get
			{
				return this._Type.Entity;
			}
			set
			{
				Type previousValue = this._Type.Entity;
				if (((previousValue != value) 
							|| (this._Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Type.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._idType = value.idType;
					}
					else
					{
						this._idType = default(string);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Product1", Storage="_Type1", ThisKey="idType", OtherKey="idType", IsForeignKey=true)]
		public Type Type1
		{
			get
			{
				return this._Type1.Entity;
			}
			set
			{
				Type previousValue = this._Type1.Entity;
				if (((previousValue != value) 
							|| (this._Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type1.Entity = null;
						previousValue.Products1.Remove(this);
					}
					this._Type1.Entity = value;
					if ((value != null))
					{
						value.Products1.Add(this);
						this._idType = value.idType;
					}
					else
					{
						this._idType = default(string);
					}
					this.SendPropertyChanged("Type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailBIlls(DetailBIll entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DetailBIlls(DetailBIll entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_DetailBIlls1(DetailBIll entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = this;
		}
		
		private void detach_DetailBIlls1(DetailBIll entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Types")]
	public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idType;
		
		private string _nameType;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Product> _Products1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTypeChanging(string value);
    partial void OnidTypeChanged();
    partial void OnnameTypeChanging(string value);
    partial void OnnameTypeChanged();
    #endregion
		
		public Type()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Products1 = new EntitySet<Product>(new Action<Product>(this.attach_Products1), new Action<Product>(this.detach_Products1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idType", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idType
		{
			get
			{
				return this._idType;
			}
			set
			{
				if ((this._idType != value))
				{
					this.OnidTypeChanging(value);
					this.SendPropertyChanging();
					this._idType = value;
					this.SendPropertyChanged("idType");
					this.OnidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string nameType
		{
			get
			{
				return this._nameType;
			}
			set
			{
				if ((this._nameType != value))
				{
					this.OnnameTypeChanging(value);
					this.SendPropertyChanging();
					this._nameType = value;
					this.SendPropertyChanged("nameType");
					this.OnnameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Product", Storage="_Products", ThisKey="idType", OtherKey="idType")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Product1", Storage="_Products1", ThisKey="idType", OtherKey="idType")]
		public EntitySet<Product> Products1
		{
			get
			{
				return this._Products1;
			}
			set
			{
				this._Products1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
		
		private void attach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.Type1 = this;
		}
		
		private void detach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.Type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idUser;
		
		private string _idPermission;
		
		private string _fullName;
		
		private string _username;
		
		private string _password;
		
		private bool _gender;
		
		private int _identityCard;
		
		private string _address;
		
		private string _email;
		
		private string _URLAvatar;
		
		private int _phone;
		
		private EntitySet<Bill> _Bills;
		
		private EntityRef<Permission> _Permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnidPermissionChanging(string value);
    partial void OnidPermissionChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OngenderChanging(bool value);
    partial void OngenderChanged();
    partial void OnidentityCardChanging(int value);
    partial void OnidentityCardChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnURLAvatarChanging(string value);
    partial void OnURLAvatarChanged();
    partial void OnphoneChanging(int value);
    partial void OnphoneChanged();
    #endregion
		
		public User1()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Permission = default(EntityRef<Permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermission", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string idPermission
		{
			get
			{
				return this._idPermission;
			}
			set
			{
				if ((this._idPermission != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPermissionChanging(value);
					this.SendPropertyChanging();
					this._idPermission = value;
					this.SendPropertyChanged("idPermission");
					this.OnidPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit NOT NULL")]
		public bool gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identityCard", DbType="Int NOT NULL")]
		public int identityCard
		{
			get
			{
				return this._identityCard;
			}
			set
			{
				if ((this._identityCard != value))
				{
					this.OnidentityCardChanging(value);
					this.SendPropertyChanging();
					this._identityCard = value;
					this.SendPropertyChanged("identityCard");
					this.OnidentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLAvatar", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URLAvatar
		{
			get
			{
				return this._URLAvatar;
			}
			set
			{
				if ((this._URLAvatar != value))
				{
					this.OnURLAvatarChanging(value);
					this.SendPropertyChanging();
					this._URLAvatar = value;
					this.SendPropertyChanged("URLAvatar");
					this.OnURLAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Int NOT NULL")]
		public int phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User1_Bill", Storage="_Bills", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User1", Storage="_Permission", ThisKey="idPermission", OtherKey="idPermission", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.User1s.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.User1s.Add(this);
						this._idPermission = value.idPermission;
					}
					else
					{
						this._idPermission = default(string);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class Voucher1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idVoucher;
		
		private string _percent;
		
		private System.DateTime _dateStart;
		
		private System.DateTime _dateEnd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidVoucherChanging(string value);
    partial void OnidVoucherChanged();
    partial void OnpercentChanging(string value);
    partial void OnpercentChanged();
    partial void OndateStartChanging(System.DateTime value);
    partial void OndateStartChanged();
    partial void OndateEndChanging(System.DateTime value);
    partial void OndateEndChanged();
    #endregion
		
		public Voucher1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVoucher", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idVoucher
		{
			get
			{
				return this._idVoucher;
			}
			set
			{
				if ((this._idVoucher != value))
				{
					this.OnidVoucherChanging(value);
					this.SendPropertyChanging();
					this._idVoucher = value;
					this.SendPropertyChanged("idVoucher");
					this.OnidVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[percent]", Storage="_percent", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string percent
		{
			get
			{
				return this._percent;
			}
			set
			{
				if ((this._percent != value))
				{
					this.OnpercentChanging(value);
					this.SendPropertyChanging();
					this._percent = value;
					this.SendPropertyChanged("percent");
					this.OnpercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateStart", DbType="DateTime NOT NULL")]
		public System.DateTime dateStart
		{
			get
			{
				return this._dateStart;
			}
			set
			{
				if ((this._dateStart != value))
				{
					this.OndateStartChanging(value);
					this.SendPropertyChanging();
					this._dateStart = value;
					this.SendPropertyChanged("dateStart");
					this.OndateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime dateEnd
		{
			get
			{
				return this._dateEnd;
			}
			set
			{
				if ((this._dateEnd != value))
				{
					this.OndateEndChanging(value);
					this.SendPropertyChanging();
					this._dateEnd = value;
					this.SendPropertyChanged("dateEnd");
					this.OndateEndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idBill;
		
		private string _idUser;
		
		private int _Shipping;
		
		private int _Total;
		
		private string _PTTT;
		
		private bool _status;
		
		private System.DateTime _createdAt;
		
		private int _totalQty;
		
		private string _nameBook;
		
		private string _email;
		
		private string _phone;
		
		private string _address;
		
		private EntitySet<DetailBIll> _DetailBIlls;
		
		private EntitySet<DetailBIll> _DetailBIlls1;
		
		private EntityRef<User> _User;
		
		private EntityRef<User1> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBillChanging(string value);
    partial void OnidBillChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnShippingChanging(int value);
    partial void OnShippingChanged();
    partial void OnTotalChanging(int value);
    partial void OnTotalChanged();
    partial void OnPTTTChanging(string value);
    partial void OnPTTTChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void OncreatedAtChanging(System.DateTime value);
    partial void OncreatedAtChanged();
    partial void OntotalQtyChanging(int value);
    partial void OntotalQtyChanged();
    partial void OnnameBookChanging(string value);
    partial void OnnameBookChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public Bill()
		{
			this._DetailBIlls = new EntitySet<DetailBIll>(new Action<DetailBIll>(this.attach_DetailBIlls), new Action<DetailBIll>(this.detach_DetailBIlls));
			this._DetailBIlls1 = new EntitySet<DetailBIll>(new Action<DetailBIll>(this.attach_DetailBIlls1), new Action<DetailBIll>(this.detach_DetailBIlls1));
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBill", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idBill
		{
			get
			{
				return this._idBill;
			}
			set
			{
				if ((this._idBill != value))
				{
					this.OnidBillChanging(value);
					this.SendPropertyChanging();
					this._idBill = value;
					this.SendPropertyChanged("idBill");
					this.OnidBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="NVarChar(255)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if ((this._User.HasLoadedOrAssignedValue || this._User1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipping", DbType="Int NOT NULL")]
		public int Shipping
		{
			get
			{
				return this._Shipping;
			}
			set
			{
				if ((this._Shipping != value))
				{
					this.OnShippingChanging(value);
					this.SendPropertyChanging();
					this._Shipping = value;
					this.SendPropertyChanged("Shipping");
					this.OnShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int NOT NULL")]
		public int Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTTT", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PTTT
		{
			get
			{
				return this._PTTT;
			}
			set
			{
				if ((this._PTTT != value))
				{
					this.OnPTTTChanging(value);
					this.SendPropertyChanging();
					this._PTTT = value;
					this.SendPropertyChanged("PTTT");
					this.OnPTTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime NOT NULL")]
		public System.DateTime createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalQty", DbType="Int NOT NULL")]
		public int totalQty
		{
			get
			{
				return this._totalQty;
			}
			set
			{
				if ((this._totalQty != value))
				{
					this.OntotalQtyChanging(value);
					this.SendPropertyChanging();
					this._totalQty = value;
					this.SendPropertyChanged("totalQty");
					this.OntotalQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameBook", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string nameBook
		{
			get
			{
				return this._nameBook;
			}
			set
			{
				if ((this._nameBook != value))
				{
					this.OnnameBookChanging(value);
					this.SendPropertyChanging();
					this._nameBook = value;
					this.SendPropertyChanged("nameBook");
					this.OnnameBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_DetailBIll", Storage="_DetailBIlls", ThisKey="idBill", OtherKey="idBill")]
		public EntitySet<DetailBIll> DetailBIlls
		{
			get
			{
				return this._DetailBIlls;
			}
			set
			{
				this._DetailBIlls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_DetailBIll1", Storage="_DetailBIlls1", ThisKey="idBill", OtherKey="idBill")]
		public EntitySet<DetailBIll> DetailBIlls1
		{
			get
			{
				return this._DetailBIlls1;
			}
			set
			{
				this._DetailBIlls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bill", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User1_Bill", Storage="_User1", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User1 User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User1 previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailBIlls(DetailBIll entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_DetailBIlls(DetailBIll entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
		
		private void attach_DetailBIlls1(DetailBIll entity)
		{
			this.SendPropertyChanging();
			entity.Bill1 = this;
		}
		
		private void detach_DetailBIlls1(DetailBIll entity)
		{
			this.SendPropertyChanging();
			entity.Bill1 = null;
		}
	}
}
#pragma warning restore 1591
